[{"title":"Tutorial Soon™️","type":0,"sectionRef":"#","url":"docs/intro","content":"Tutorial Soon™️","keywords":""},{"title":"Vec64","type":0,"sectionRef":"#","url":"api/Vec64","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Vec64","url":"api/Vec64#types","content":" "},{"title":"Vec64​","type":1,"pageTitle":"Vec64","url":"api/Vec64#Vec64","content":"&lt;/&gt; type Vec64 = Vec64  "},{"title":"Properties​","type":1,"pageTitle":"Vec64","url":"api/Vec64#properties","content":" "},{"title":"zero​","type":1,"pageTitle":"Vec64","url":"api/Vec64#zero","content":"&lt;/&gt; Vec64.zero: Vec64 Returns a new Vec64 with the components (0, 0, 0)  "},{"title":"one​","type":1,"pageTitle":"Vec64","url":"api/Vec64#one","content":"&lt;/&gt; Vec64.one: Vec64 Returns a new Vec64 with the components (1, 1, 1)  "},{"title":"xAxis​","type":1,"pageTitle":"Vec64","url":"api/Vec64#xAxis","content":"&lt;/&gt; Vec64.xAxis: Vec64 Returns a new Vec64 with the components (1, 0, 0)  "},{"title":"yAxis​","type":1,"pageTitle":"Vec64","url":"api/Vec64#yAxis","content":"&lt;/&gt; Vec64.yAxis: Vec64 Returns a new Vec64 with the components (0, 1, 0)  "},{"title":"zAxis​","type":1,"pageTitle":"Vec64","url":"api/Vec64#zAxis","content":"&lt;/&gt; Vec64.zAxis: Vec64 Returns a new Vec64 with the components (0, 0, 1) "},{"title":"Functions​","type":1,"pageTitle":"Vec64","url":"api/Vec64#functions","content":" "},{"title":"Magnitude​","type":1,"pageTitle":"Vec64","url":"api/Vec64#Magnitude","content":"&lt;/&gt; Vec64:Magnitude() → number Returns the magnitude (distance) of the vector from (0, 0, 0)  "},{"title":"Unit​","type":1,"pageTitle":"Vec64","url":"api/Vec64#Unit","content":"&lt;/&gt; Vec64:Unit() → Vec64 Returns the unit (direction) of the vector  "},{"title":"Cross​","type":1,"pageTitle":"Vec64","url":"api/Vec64#Cross","content":"&lt;/&gt; Vec64:Cross(vector: Vec64) → Vec64 Returns the cross product of the two vectors  "},{"title":"Dot​","type":1,"pageTitle":"Vec64","url":"api/Vec64#Dot","content":"&lt;/&gt; Vec64:Dot(vector: Vec64) → Vec64 Returns the dot product of the two vectors  "},{"title":"FuzzyEq​","type":1,"pageTitle":"Vec64","url":"api/Vec64#FuzzyEq","content":"&lt;/&gt; Vec64:FuzzyEq( vector: Vec64, epsilon: number ) → boolean Returns true if the other Vec64 falls within the epsilon radius of this Vec64  "},{"title":"Lerp​","type":1,"pageTitle":"Vec64","url":"api/Vec64#Lerp","content":"&lt;/&gt; Vec64:Lerp( vector: Vec64, alpha: number ) → Vec64 Returns a linearly interpolated Vec64 between itself and the vector goal Vec64 by the fraction alpha  "},{"title":"Max​","type":1,"pageTitle":"Vec64","url":"api/Vec64#Max","content":"&lt;/&gt; Vec64:Max(...: Vec64) → boolean Returns a Vec64 where each component is the highest among the respective components of itelf and the provided Vec64s  "},{"title":"Min​","type":1,"pageTitle":"Vec64","url":"api/Vec64#Min","content":"&lt;/&gt; Vec64:Min(...: Vec64) → boolean Returns a Vec64 where each component is the lowest among the respective components of itelf and the provided Vec64s  "},{"title":"AsTuple​","type":1,"pageTitle":"Vec64","url":"api/Vec64#AsTuple","content":"&lt;/&gt; Vec64:AsTuple() → ( number, number, number ) Returns the Vec64s components as a Tuple  "},{"title":"Clone​","type":1,"pageTitle":"Vec64","url":"api/Vec64#Clone","content":"&lt;/&gt; Vec64:Clone() → Vec64 Returns a clone of the Vec64  "},{"title":"ToVector3​","type":1,"pageTitle":"Vec64","url":"api/Vec64#ToVector3","content":"&lt;/&gt; Vec64:ToVector3() → Vec64 | Vector3  Returns a Vector3 if the environment is Roblox, otherwise it returns a Vec64 "}]