"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[713],{91270:function(e){e.exports=JSON.parse('{"functions":[{"name":"Magnitude","desc":"Returns the magnitude (distance) of the vector from (0, 0, 0)\\n\\n    ","params":[],"returns":[{"desc":"","lua_type":"number"}],"function_type":"method","source":{"line":152,"path":"Vec64.lua"}},{"name":"Unit","desc":"Returns the unit (direction) of the vector\\n\\n    ","params":[],"returns":[{"desc":"","lua_type":"Vec64"}],"function_type":"method","source":{"line":162,"path":"Vec64.lua"}},{"name":"Cross","desc":"Returns the cross product of the two vectors\\n\\n\\n    ","params":[{"name":"vector","desc":"","lua_type":"Vec64"}],"returns":[{"desc":"","lua_type":"Vec64"}],"function_type":"method","source":{"line":178,"path":"Vec64.lua"}},{"name":"Dot","desc":"Returns the dot product of the two vectors\\n\\n\\n    ","params":[{"name":"vector","desc":"","lua_type":"Vec64"}],"returns":[{"desc":"","lua_type":"Vec64"}],"function_type":"method","source":{"line":194,"path":"Vec64.lua"}},{"name":"FuzzyEq","desc":"Returns true if the other `Vec64` falls within the epsilon radius of this `Vec64`\\n\\n\\n    ","params":[{"name":"vector","desc":"","lua_type":"Vec64"},{"name":"epsilon","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"method","source":{"line":210,"path":"Vec64.lua"}},{"name":"Lerp","desc":"Returns a linearly interpolated `Vec64` between itself and the `vector` goal Vec64 by the fraction `alpha`\\n\\n\\n    ","params":[{"name":"vector","desc":"","lua_type":"Vec64"},{"name":"alpha","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"Vec64"}],"function_type":"method","source":{"line":233,"path":"Vec64.lua"}},{"name":"Max","desc":"Returns a `Vec64` where each component is the highest among the respective components of itelf and the provided `Vec64`s\\n\\n\\n    ","params":[{"name":"...","desc":"","lua_type":"Vec64"}],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"method","source":{"line":249,"path":"Vec64.lua"}},{"name":"Min","desc":"Returns a `Vec64` where each component is the lowest among the respective components of itelf and the provided `Vec64`s\\n\\n\\n    ","params":[{"name":"...","desc":"","lua_type":"Vec64"}],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"method","source":{"line":268,"path":"Vec64.lua"}},{"name":"AsTuple","desc":"Returns the `Vec64`s components as a Tuple\\n\\n    ","params":[],"returns":[{"desc":"","lua_type":"(number, number, number)"}],"function_type":"method","source":{"line":285,"path":"Vec64.lua"}},{"name":"Clone","desc":"Returns a clone of the `Vec64`\\n\\n    ","params":[],"returns":[{"desc":"","lua_type":"Vec64"}],"function_type":"method","source":{"line":295,"path":"Vec64.lua"}},{"name":"ToVector3","desc":"Returns a `Vector3` if the environment is Roblox, otherwise it returns a `Vec64`\\n\\n    ","params":[],"returns":[{"desc":"","lua_type":"Vec64 | Vector3"}],"function_type":"method","source":{"line":305,"path":"Vec64.lua"}}],"properties":[{"name":"zero","desc":"Returns a new `Vec64` with the components (0, 0, 0)","lua_type":"Vec64","source":{"line":323,"path":"Vec64.lua"}},{"name":"one","desc":"Returns a new `Vec64` with the components (1, 1, 1)","lua_type":"Vec64","source":{"line":329,"path":"Vec64.lua"}},{"name":"xAxis","desc":"Returns a new `Vec64` with the components (1, 0, 0)","lua_type":"Vec64","source":{"line":335,"path":"Vec64.lua"}},{"name":"yAxis","desc":"Returns a new `Vec64` with the components (0, 1, 0)","lua_type":"Vec64","source":{"line":341,"path":"Vec64.lua"}},{"name":"zAxis","desc":"Returns a new `Vec64` with the components (0, 0, 1)","lua_type":"Vec64","source":{"line":347,"path":"Vec64.lua"}}],"types":[{"name":"Vec64","desc":"","lua_type":"Vec64","source":{"line":359,"path":"Vec64.lua"}}],"name":"Vec64","desc":"The main class holding everything together, uses 64 bit numbers","source":{"line":11,"path":"Vec64.lua"}}')}}]);